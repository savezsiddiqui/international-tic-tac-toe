{"version":3,"sources":["index.js"],"names":["Square","_ref","value","onClick","id","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","type","className","Board","props","matrix","squares","map","square","i","key","Game","state","history","Array","fill","xIsNext","stepNumber","buttonVisible","this","length","slice","calculateWinner","setBackground","setState","concat","document","getElementsByClassName","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","element","style","background","err","return","filter","index","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","border","removeHighlight","jumpTo","lines","_lines$i","Object","_home_savez_my_game_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","highlightWinner","status","_this2","current","winner","movesX","move","desc","toString","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","movesO","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","xs","span","order","sm","handleClick","handlePlay","React","Component","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","ReactDOM","render","getElementById"],"mappings":"sPAKMA,SAAS,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,QAASC,EAASH,EAATG,GAC9B,OACIC,EAAAC,EAAAC,cAAA,UACIH,GAAIA,EACJI,KAAK,SACLL,QAASA,EACTM,UAAU,0BAETP,KAKPQ,EAAQ,SAACC,GAEX,IAAMC,EAASD,EAAME,QAAQC,IAAI,SAACC,EAAQC,GACtC,OACIX,EAAAC,EAAAC,cAACP,EAAD,CACII,GAAIY,EACJC,IAAKD,EACLd,MAAOS,EAAME,QAAQG,GACrBb,QAAS,kBAAMQ,EAAMR,QAAQa,QAKzC,OACIX,EAAAC,EAAAC,cAAA,OAAKE,UAAU,wBACVG,IAKPM,6MAEFC,MAAQ,CACJC,QAAS,CAAC,CACNP,QAASQ,MAAM,GAAGC,KAAK,QAE3BC,SAAS,EACTC,WAAY,EACZC,eAAe,8EAGPT,GACR,IAAMI,EAAUM,KAAKP,MAAMC,QAErBP,EADUO,EAAQA,EAAQO,OAAS,GACjBd,QAAQe,QAC5BF,KAAKG,gBAAgBhB,IAAYA,EAAQG,KAG7CU,KAAKI,gBACLjB,EAAQG,GAAKU,KAAKP,MAAMI,QAAU,IAAM,IACxCG,KAAKK,SAAS,CACVX,QAASA,EAAQY,OAAO,CAAC,CACrBnB,QAASA,KAEbU,SAAUG,KAAKP,MAAMI,mDAMzB,IAAIV,EAAUoB,SAASC,uBAAuB,UAFlCC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIZ,QAAAC,EAAAC,EAAoB3B,EAApB4B,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA6B,KAApBU,EAAoBN,EAAArC,MACrBwB,KAAKP,MAAMI,QACXsB,EAAQC,MAAMC,WAAa,UAG3BF,EAAQC,MAAMC,WAAa,WATvB,MAAAC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,mCAcTrB,GACHU,KAAKK,SAAS,CACVP,WAAYR,EACZI,QAASM,KAAKP,MAAMC,QAAQ8B,OAAO,SAACrC,EAASsC,GAAV,OAC/BA,EAAQnC,IACZO,QAASG,KAAKP,MAAMK,WAAa,IAAM,IAqInD,WACI,IAAIX,EAAUoB,SAASC,uBAAuB,UADvBkB,GAAA,EAAAC,GAAA,EAAAC,OAAAhB,EAAA,IAEvB,QAAAiB,EAAAC,EAAmB3C,EAAnB4B,OAAAC,cAAAU,GAAAG,EAAAC,EAAAb,QAAAC,MAAAQ,GAAA,EAA4B,KAAnBrC,EAAmBwC,EAAArD,MACxBa,EAAO+B,MAAMW,OAAS,mBAHH,MAAAT,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,IAnInBI,wCAIAhC,KAAKiC,OAAO,GACZjC,KAAKK,SAAS,CAAEN,eAAe,4CAGnBZ,GAYZ,IAXA,IAAM+C,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGF5C,EAAI,EAAGA,EAAI4C,EAAMjC,OAAQX,IAAK,KAAA6C,EAAAC,OAAAC,EAAA,EAAAD,CACjBF,EAAM5C,GADW,GAC5BV,EAD4BuD,EAAA,GACzBG,EADyBH,EAAA,GACtBI,EADsBJ,EAAA,GAEnC,GAAIhD,EAAQP,IAAMO,EAAQP,KAAOO,EAAQmD,IAAMnD,EAAQP,KAAOO,EAAQoD,GAIlE,OAHAC,EAAgB5D,EAAG0D,EAAGC,GACjBvC,KAAKP,MAAMM,eACZC,KAAKK,SAAS,CAAEN,eAAe,IAC5BZ,EAAQP,GAIvB,IAAK,IAAIU,EAAI,EAAGA,EAAIH,EAAQc,OAAQX,IAChC,GAAmB,OAAfH,EAAQG,GACR,OAAO,KAKf,OAFKU,KAAKP,MAAMM,eACZC,KAAKK,SAAS,CAAEN,eAAe,IAC5B,uCAKF,IAyBD0C,EAzBCC,EAAA1C,KACCN,EAAUM,KAAKP,MAAMC,QACrBiD,EAAUjD,EAAQA,EAAQO,OAAS,GACnC2C,EAAS5C,KAAKG,gBAAgBwC,EAAQxD,SAEtC0D,EAASnD,EAAQN,IAAI,SAAC0D,EAAMxD,GAC9B,IAAMyD,EAAO,kBAAoBzD,EAAE0D,WACnC,GAAI1D,EAAI,IAAM,EACV,OACIX,EAAAC,EAAAC,cAAA,MAAIU,IAAKD,GACLX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQxE,QAAS,kBAAMiE,EAAKT,OAAO3C,KAAnC,IAA0CyD,MAKpDG,EAASxD,EAAQN,IAAI,SAAC0D,EAAMxD,GAC9B,IAAMyD,EAAO,kBAAoBzD,EAAE0D,WACnC,GAAU,IAAN1D,GAAWA,EAAI,IAAM,EACrB,OACIX,EAAAC,EAAAC,cAAA,MAAIU,IAAKD,GACLX,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAQxE,QAAS,kBAAMiE,EAAKT,OAAO3C,KAAnC,IAA0CyD,MAgB1D,OATIN,EADW,MAAXG,GAA6B,MAAXA,EACT,WAAaA,EAEN,QAAXA,EACI,OAGA,iBAAmB5C,KAAKP,MAAMI,QAAU,IAAM,KAIvDlB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,KACIxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KAEIzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,MAAO,GAAKC,GAAI,CAAEF,KAAM,EAAGC,MAAO,GACnDzE,UAAU,eAEVJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,gBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiB8D,IAGnClE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,MAAO,GAAKC,GAAI,CAAEF,KAAM,EAAGC,MAAO,GAAKzE,UAAU,eAClEJ,EAAAC,EAAAC,cAAA,UAAK4D,GACL9D,EAAAC,EAAAC,cAACG,EAAD,CACIG,QAASwD,EAAQxD,QACjBV,QAAS,SAACa,GAAQoD,EAAKgB,YAAYpE,MAGnCU,KAAKP,MAAMM,cACPpB,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACIzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKtE,UAAU,oBACXJ,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CACIxE,QAAS,kBAAMiE,EAAKiB,eADxB,iBAKN,MAKdhF,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,MAAO,GAAKC,GAAI,CAAEF,KAAM,EAAGC,MAAO,GACnDzE,UAAU,eAEVJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,QAAd,gBACAJ,EAAAC,EAAAC,cAAA,MAAIE,UAAU,iBAAiBmE,aAlKpCU,IAAMC,WA0KzB,SAASrB,EAAgB5D,EAAG0D,EAAGC,GAE3B,IAAIpD,EAAUoB,SAASC,uBAAuB,UAFhBsD,GAAA,EAAAC,GAAA,EAAAC,OAAApD,EAAA,IAG9B,QAAAqD,EAAAC,EAAmB/E,EAAnB4B,OAAAC,cAAA8C,GAAAG,EAAAC,EAAAjD,QAAAC,MAAA4C,GAAA,EAA4B,KAAnBzE,EAAmB4E,EAAAzF,MACpBa,EAAOX,IAAME,GAAKS,EAAOX,IAAM4D,GAAKjD,EAAOX,IAAM6D,IACjDlD,EAAO+B,MAAMW,OAAS,mBALA,MAAAT,GAAAyC,GAAA,EAAAC,EAAA1C,EAAA,YAAAwC,GAAA,MAAAI,EAAA3C,QAAA2C,EAAA3C,SAAA,WAAAwC,EAAA,MAAAC,IAkBlCG,IAASC,OACLzF,EAAAC,EAAAC,cAACW,EAAD,MACAe,SAAS8D,eAAe","file":"static/js/main.d8845854.chunk.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport './index.css'\n\nconst Square = ({ value, onClick, id }) => {\n    return (\n        <button\n            id={id}\n            type=\"button\"\n            onClick={onClick}\n            className=\"btn btn-default square\"\n        >\n            {value}\n        </button>\n    )\n}\n\nconst Board = (props) => {\n\n    const matrix = props.squares.map((square, i) => {\n        return (\n            <Square\n                id={i}\n                key={i}\n                value={props.squares[i]}\n                onClick={() => props.onClick(i)}\n            />\n        )\n    })\n\n    return (\n        <div className=\"btn-group btn-matrix\">\n            {matrix}\n        </div>\n    )\n}\n\nclass Game extends React.Component {\n\n    state = {\n        history: [{\n            squares: Array(9).fill(null),\n        }],\n        xIsNext: true,\n        stepNumber: 0,\n        buttonVisible: false,\n    }\n\n    handleClick(i) {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (this.calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        this.setBackground()\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    setBackground() {\n\n        let squares = document.getElementsByClassName('square')\n\n        for (let element of squares) {\n            if (this.state.xIsNext) {\n                element.style.background = '#424242'\n            }\n            else {\n                element.style.background = '#37474f'\n            }\n        }\n    }\n\n    jumpTo(i) {\n        this.setState({\n            stepNumber: i,\n            history: this.state.history.filter((squares, index) =>\n                index < i),\n            xIsNext: this.state.stepNumber % 2 === 0 ? true : false\n        })\n        removeHighlight()\n    }\n\n    handlePlay() {\n        this.jumpTo(1)\n        this.setState({ buttonVisible: false })\n    }\n\n    calculateWinner(squares) {\n        const lines = [\n            [0, 1, 2],\n            [3, 4, 5],\n            [6, 7, 8],\n            [0, 3, 6],\n            [1, 4, 7],\n            [2, 5, 8],\n            [0, 4, 8],\n            [2, 4, 6],\n        ];\n\n        for (let i = 0; i < lines.length; i++) {\n            const [a, b, c] = lines[i];\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n                highlightWinner(a, b, c)\n                if (!this.state.buttonVisible)\n                    this.setState({ buttonVisible: true })\n                return squares[a];\n            }\n        }\n\n        for (let i = 0; i < squares.length; i++) {\n            if (squares[i] === null)\n                return null;\n        }\n\n        if (!this.state.buttonVisible)\n            this.setState({ buttonVisible: true })\n        return 'tie'\n    }\n\n\n\n    render() {\n        const history = this.state.history;\n        const current = history[history.length - 1];\n        const winner = this.calculateWinner(current.squares);\n\n        const movesX = history.map((move, i) => {\n            const desc = 'Undo till Move ' + i.toString()\n            if (i % 2 !== 0)\n                return (\n                    <li key={i}>\n                        <Button onClick={() => this.jumpTo(i)} > {desc}</ Button>\n                    </li>\n                )\n        })\n\n        const movesO = history.map((move, i) => {\n            const desc = 'Undo till Move ' + i.toString()\n            if (i !== 0 && i % 2 === 0)\n                return (\n                    <li key={i}>\n                        <Button onClick={() => this.jumpTo(i)} > {desc}</ Button>\n                    </li>\n                )\n        })\n\n        let status;\n        if (winner === 'X' || winner === 'O') {\n            status = 'Winner: ' + winner\n        }\n        else if (winner === 'tie') {\n            status = 'Draw'\n        }\n        else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <Container>\n                <Row>\n\n                    <Col xs={{ span: 12, order: 2 }} sm={{ span: 3, order: 1 }}\n                        className='text-center'\n                    >\n                        <h4 className='mt-3'>Prev X Moves</h4>\n                        <ul className='list-unstyled'>{movesX}</ul>\n                    </Col>\n\n                    <Col xs={{ span: 12, order: 1 }} sm={{ span: 6, order: 2 }} className='text-center'>\n                        <h3>{status}</h3>\n                        <Board\n                            squares={current.squares}\n                            onClick={(i) => { this.handleClick(i) }}\n                        />\n                        {\n                            this.state.buttonVisible ?\n                                <Row>\n                                    <Col className='mt-2 text-center'>\n                                        <Button\n                                            onClick={() => this.handlePlay()}\n                                        >Play Again!</ Button>\n                                    </Col>\n                                </Row>\n                                : null\n                        }\n\n                    </Col>\n\n                    <Col xs={{ span: 12, order: 3 }} sm={{ span: 3, order: 3 }}\n                        className='text-center'\n                    >\n                        <h4 className='mt-3'>Prev O Moves</h4>\n                        <ul className='list-unstyled'>{movesO}</ul>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nfunction highlightWinner(a, b, c) {\n\n    let squares = document.getElementsByClassName('square')\n    for (let square of squares) {\n        if (square.id == a || square.id == b || square.id == c) {\n            square.style.border = '1px solid gold'\n        }\n    }\n}\n\nfunction removeHighlight() {\n    let squares = document.getElementsByClassName('square')\n    for (let square of squares) {\n        square.style.border = '1px solid white'\n    }\n}\n// ============================================================\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}